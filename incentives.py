# -*- coding: utf-8 -*-
"""Untitled30.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aVdHDgaZ0zOCDTiH61yTW6OoGXc2LNzI
"""

import pandas as pd
def get_float(prompt, is_percent=False):
    while True:
        try:
            val = input(prompt)
            num = float(val.replace('%', '')) / 100 if is_percent else float(val)
            return num
        except ValueError:
            print("Invalid input. Try again.")

def get_yes_no(prompt):
    while True:
        val = input(prompt).strip().lower()
        if val in ['yes', 'no']:
            return val == 'yes'
        print("Please enter 'yes' or 'no'.")

# --- Setup ---
budget = get_float("Enter the overall budget: ")
while True:
    try:
        num_kpis = int(input("Enter number of KPIs (1-4): "))
        if 1 <= num_kpis <= 4:
            break
    except ValueError:
        pass
    print("Invalid input. Enter a number between 1 and 4.")

kpi_data, total_weight = [], 0
sales_kpi_entered = False

# --- Collect KPI Inputs ---
for i in range(num_kpis):
    print(f"\n--- KPI {i+1} ---")
    while True:
        weight = get_float(f"KPI {i+1} Weight%: ", is_percent=True)
        if num_kpis > 1 and i == 0 and weight >= 1.0:
            print("KPI 1 cannot be 100% when there are multiple KPIs.")
        elif total_weight + weight > 1.0:
            print(f"Total weight exceeds 100% (current: {total_weight*100:.2f}%). Re-enter.")
        else:
            break
    total_weight += weight

    actual = get_float("Enter Actuals: ")
    target = get_float("Enter Target: ")
    ach_pct = (actual / target * 100) if target != 0 else 0

    if not sales_kpi_entered:
        is_sales = get_yes_no("Is this a Sales KPI? (yes/no): ")
        sales_kpi_entered = is_sales
    else:
        is_sales = False

    kpi_data.append({
        'weight': weight, 'actual': actual, 'target': target,
        'is_sales': is_sales, 'ach_pct': ach_pct,
        'base_amt': 0.0, 'accel_amt': 0.0, 'total_amt': 0.0
    })

if abs(total_weight - 1.0) > 1e-6:
    print("❌ KPI weights don't sum to 100%. Exiting.")
    exit()

# --- Calculate Base Incentives ---
total_base = 0
for kpi in kpi_data:
    ach = kpi['ach_pct']
    base_pct = (ach - 80) * 2 if 80 <= ach < 90 else 20 + (min(ach, 100) - 90) * 8 if ach >= 90 else 0
    base_amt = budget * (base_pct / 100) * kpi['weight']
    kpi['base_amt'] = base_amt
    total_base += base_amt

# --- Accelerator Calculation ---
total_accel = 0
sales_kpi_below_80 = any(k['is_sales'] and k['ach_pct'] < 80 for k in kpi_data)

for kpi in kpi_data:
    kpi['total_amt'] = kpi['base_amt']  # Start with base
    if kpi['is_sales'] and kpi['ach_pct'] > 100:
        if all(other['ach_pct'] > 90 for other in kpi_data if other != kpi):
            accel_pct = (min(kpi['ach_pct'], 130) - 100) * 3
            accel_amt = total_base * (accel_pct / 100)
            kpi.update({'accel_amt': accel_amt, 'total_amt': kpi['base_amt'] + accel_amt})
            total_accel += accel_amt

# --- Display Results ---
overall_total = sum(k['total_amt'] for k in kpi_data)

for i, kpi in enumerate(kpi_data):
    print(f"\n--- KPI {i+1} ---")
    print(f"Weight: {kpi['weight']*100:.0f}%, Actual: {kpi['actual']}, Target: {kpi['target']}")
    print(f"Sales KPI: {'Yes' if kpi['is_sales'] else 'No'}, Achievement: {kpi['ach_pct']:.2f}%")
    print(f"Base Incentive: {kpi['base_amt']:.2f}")
    if kpi['accel_amt'] > 0:
        print(f"Accelerator Incentive: {kpi['accel_amt']:.2f}")
    print(f"Total Incentive: {kpi['total_amt']:.2f}")

print("\n--- Overall Total Incentive ---")
summary = " + ".join([f"KPI {i+1} ({k['total_amt']:.2f})" for i, k in enumerate(kpi_data)])
if total_accel > 0:
    summary += f" + Accelerator({total_accel:.2f})"

print("Overall Total Incentive =", summary)

if sales_kpi_below_80:
    print(f"\n⚠️ KPI below 80%. Final incentive is halved: {overall_total/2:.2f}")
else:
    print(f"\n✅ Final Incentive: {overall_total:.2f}")